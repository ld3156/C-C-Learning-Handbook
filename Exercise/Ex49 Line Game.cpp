/*
描述
在幼儿园中，老师安排小朋友做一个排队的游戏。
首先老师精心的把数目相同的小男孩和小女孩编排在一个队列中，
每个小孩按其在队列中的位置发给一个编号（编 号从0开始）。
然后老师告诉小朋友们，站在前边的小男孩可以和他后边相邻的小女孩手拉手离开队列，
剩余的小朋友重新站拢，再按前后相邻的小男孩小女孩手拉 手离开队列游戏，如此往复。
由于教师精心的安排，恰好可以保证每两个小朋友都能手拉手离开队列，
并且最后离开的两个小朋友是编号最小的和最大的两个小朋 友。
（注：只有小男孩在前，小女孩在后，且他们两之间没有其他的小朋友，他们才能手拉手离开队列）。
请根据老师的排队，按小女孩编号从小到大的顺序，
给出 所有手拉手离开队列的小男孩和小女孩的编号对。

输入 Input ((()(())())(()))
用一个字符串代表小朋友队列。
字符串中只会出现两个字符（样例输入里用的是 括号但实际数据则不一定），
分别代表小男孩和小女孩，首先出现的字符代表小男孩，另一个字符代表小女孩。
小孩总数不超过100

输出
按小女孩编号顺序，顺序输出手拉手离开队列的小男孩和小女孩的编号对，
每行一对编号，编号之间用一个空格分隔。
*/

#include <iostream>
using namespace std;

int main() {
    char s[110];
    // 读入一行字符串
    cin.getline(s, 110);
    
    // 根据题目说明，第一个出现的字符代表小男孩，
    // 第一个与之不同的字符代表小女孩
    char boy = s[0], girl = 0;
    for (int i = 0; s[i] != '\0'; i++) {
        if (s[i] != boy) {
            girl = s[i];
            break;
        }
    }
    
    // 使用数组模拟栈，存储小男孩的编号
    int stack[110];
    int top = -1;
    
    // 用两个数组存储配对结果：配对时记录小男孩和小女孩的编号
    int pairBoy[110], pairGirl[110];
    int pairCount = 0;
    
    // 遍历字符串，遇到小男孩入栈，遇到小女孩则出栈配对
    for (int i = 0; s[i] != '\0'; i++) {
        if (s[i] == boy) {
            top++;
            stack[top] = i;
        } else if (s[i] == girl) {
            if (top >= 0) {
                pairBoy[pairCount] = stack[top]; // 出栈的小男孩编号
                pairGirl[pairCount] = i;           // 当前小女孩编号
                pairCount++;
                top--;
            }
        }
    }
    
    // 按小女孩编号从小到大的顺序输出配对结果
    // 注意：由于遍历时女孩的出现顺序是从小到大，故配对结果已经排序
    for (int i = 0; i < pairCount; i++) {
        cout << pairBoy[i] << " " << pairGirl[i] << endl;
    }
    
    return 0;
}

